name: Deploy to Production

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Test Activity Service
        working-directory: ./backend/activity-service
        run: |
          go mod download
          go test ./... -v

      - name: Test Nutrition Service
        working-directory: ./backend/nutrition-service
        run: |
          go mod download
          go test ./... -v

      - name: Test Social Service
        working-directory: ./backend/social-service
        run: |
          go mod download
          go test ./... -v

      - name: Test User Service
        working-directory: ./backend/user-service
        run: |
          go mod download
          go test ./... -v

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.32.4"
          channel: "stable"

      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            ~/.dart_tool
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      - name: Install Flutter dependencies
        working-directory: ./frontend/flutter_app
        run: flutter pub get

      - name: Analyze Flutter code
        working-directory: ./frontend/flutter_app
        run: flutter analyze

      - name: Test Flutter app
        working-directory: ./frontend/flutter_app
        run: flutter test

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to remote
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd /root/healthy-summer/backend
            git pull origin main
            docker compose -f docker-compose.prod.yml down
            docker compose -f docker-compose.prod.yml up -d --build
